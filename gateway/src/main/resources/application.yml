oidc:
  issuer-uri: https://dev-388275.oktapreview.com/oauth2/default
  jwk-set-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/keys
  client-id: 0oajfcjaxs1OKu2kC0h7
  client-secret: bd5iKqHzaRc9Fv6lY_XyzEenpD4v9WT2k9XYdtF1

spring:
  application:
    name: gateway
  profiles:
    active: native
  security:
    oauth2:
      client:
        provider:
          okta:
            issuer-uri: ${oidc.issuer-uri}
            access-token-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/token
            user-authorization-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/authorize
            authorization-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/authorize
            token-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/token
            user-info-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/userinfo
            jwk-set-uri: https://dev-388275.oktapreview.com/oauth2/default/v1/keys
        registration:
          okta:
            issuer: ${oidc.issuer-uri}
            audience: frontend
            client-id: ${oidc.client-id}
            client-secret: ${oidc.client-secret}
            scope: openid, email, profile
            scopeClaim: scp
            rolesClaim: groups
      resourceserver:
        jwt:
          issuer-uri: ${oidc.issuer-uri}
          jwk-set-uri: ${oidc.jwk-set-uri}

server:
  port: 8080
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream, info, health

eureka:
  client:
    region: default
    registryFetchIntervalSeconds: 5
    registerWithEureka: false
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    fetch-registry: true
  instance:
    preferIpAddress: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    ROOT: debug
    org.springframework.web: trace
    reactor.core.publisher: trace